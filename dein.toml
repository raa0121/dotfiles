[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
  call denite#custom#option('_', 'statusline', v:false)
'''

[[plagins]]
repo = 'Shougo/deoppet.nvim'
if = '''has('nvim')'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['neosnippet', 'deoppet.nvim']

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/unite-outline'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'cohama/agit.vim'
  
[[plugins]]
repo = 'dart-lang/dart-vim-plugin'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
if = '''has('python')'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'itchyny/calendar.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
  
[[plugins]]
repo = 'joonty/vdebug'
if = '''has('python')'''

[[plugins]]
repo = 'justinmk/vim-dirvish'
  
[[plugins]]
repo = 'kakkyz81/evervim'
if = '''has('python')'''

[[plugins]]
repo = 'kamichidu/vim-ref-java'
depends = ['wwwrenderer-vim']

[[plugins]]
repo = 'kana/vim-fakeclip'

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'kana/vim-textobj-function'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'lambdalisue/fern.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
depends = ['lambdalisue/nerdfont.vim']

[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/vim-unified-diff'

[[plugins]]
repo = 'machakann/vim-swap'

[[plugins]]
repo = 'mattn/libcallex-vim'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'miyakogi/conoline.vim'

[[plugins]]
repo = 'osyo-manga/quickrun-hook-u-nya-'
depends = ['vim-quickrun']

[[plugins]]
repo = 'osyo-manga/quickrun-hook-vcvarsall'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]]
repo = 'osyo-manga/vim-reunions'

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
depends = ['typescript-vim']

[[plugins]]
repo='prabirshrestha/async.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-lsp.vim'

[[plugins]]
repo='prabirshrestha/asyncomplete-neosnippet.vim'
hook_add='''
call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
    \ 'name': 'neosnippet',
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
    \ }))
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo='prabirshrestha/vim-lsp'
hook_add='''
let g:gopath = expand('$GOPATH') ? expand('$GOPATH') : expand('$HOME/go')
if executable(expand(g:gopath . '/bin/gopls'))
  augroup LspGo
    autocmd!
    autocmd User lsp_setup call lsp#register_server({
      \ 'name': 'gopls',
      \ 'cmd': {server_info->[expand(g:gopath . '/bin/gopls'), '-mode', 'stdio']},
      \ 'whitelist': ['go'],
      \ })
    autocmd FileType go setlocal omnifunc=lsp#complete
  augroup END
endif

if executable('solargraph')
  augroup LspRuby
    autocmd!
    autocmd User lsp_setup call lsp#register_server({
      \ 'name': 'solargraph',
      \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
      \ 'initialization_options': {"diagnostics": "true"},
      \ 'whitelist': ['ruby'],
      \ })
    autocmd FileType ruby setlocal omnifunc=lsp#complete
  augroup END
endif

let g:lsp_signs_enabled = 1         " enable signs
let g:lsp_diagnostics_echo_cursor = 1 " enable echo under cursor when in normal mode

let g:lsp_signs_error = {'text': '✗'}
let g:lsp_signs_warning = {'text': '‼'}
'''

[[plugins]]
repo = 'rbtnn/game_engine.vim'

[[plugins]]
repo = 'rbtnn/vim-pterm'

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '''!has('nvim')'''

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '''!has('nvim')'''

[[plugins]]
repo = 'thinca/vim-localrc'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'thinca/vim-singleton'

[[plugins]]
repo = 'thinca/vim-splash'

[[plugins]]
repo = 'thosakwe/vim-flutter'

[[plugins]]
repo = 'ujihisa/neco-look'
if = '''executable('look')'''

[[plugins]]
repo = 'yaasita/slack.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'vim-scripts/sudo.vim'
