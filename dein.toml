[[plugins]]
repo = 'Aixile/tjs.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
if = '''!has('nvim')'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = ['neosnippet.vim']

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'dart-lang/dart-vim-plugin'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
if = '''has('python')'''

# [[plugins]]
# repo = 'gelguy/wilder.nvim'
# hook_add = '''
# call wilder#setup({
#   \ 'modes': [':', '/', '?'],
#   \ 'next_key': '<Tab>',
#   \ 'previous_key': '<S-Tab>',
#   \ 'accept_key': '<Down>',
#   \ 'reject_key': '<Up>',
#   \ })
# call wilder#set_option('pipeline', [
#   \   wilder#branch(
#   \     wilder#python_file_finder_pipeline({
#   \       'file_command': ['find', '.', '-type', 'f', '-printf', '%P\n'],
#   \       'dir_command': ['find', '.', '-type', 'd', '-printf', '%P\n'],
#   \       'filters': ['fuzzy_filter', 'difflib_sorter'],
#   \     }),
#   \     wilder#cmdline_pipeline({
#   \       'fuzzy': 1,
#   \       'fuzzy_filter': wilder#vim_fuzzy_filter(),
#   \       'set_pcre2_pattern': has('nvim'),
#   \     }),
#   \     wilder#python_search_pipeline({
#   \       'pattern': wilder#python_fuzzy_pattern({
#   \         'start_at_boundary': 0,
#   \       }),
#   \     }),
#   \   )
#   \ ])
# call wilder#set_option('renderer', wilder#popupmenu_renderer(wilder#popupmenu_border_theme({
#   \ 'border': 'rounded',
#   \ 'empty_message': wilder#popupmenu_empty_message_with_spinner(),
#   \ 'highlighter': wilder#basic_highlighter(),
#   \ 'highlights': {
#   \   'accent': wilder#make_hl('WilderAccent', 'Pmenu', [{}, {}, {'foreground': '#f4468f'}]),
#   \ },
#   \ 'left': [
#   \   ' ', wilder#popupmenu_devicons(),
#   \ ],
#   \ 'right': [
#   \   ' ', wilder#popupmenu_scrollbar(),
#   \ ],
#   \ })))
# '''

[[plugins]]
repo = 'haya14busa/incsearch.vim'

[[plugins]]
repo = 'heavenshell/vim-quickrun-hook-unittest'
depends = ['vim-quickrun']

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'itchyny/calendar.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'joonty/vdebug'
if = '''has('python')'''

[[plugins]]
repo = 'kakkyz81/evervim'
if = '''has('python')'''

[[plugins]]
repo = 'kamichidu/vim-ref-java'
depends = ['wwwrenderer-vim']

[[plugins]]
repo = 'kana/vim-fakeclip'

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'kana/vim-textobj-function'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'lambdalisue/fern.vim'

[[plugins]]
repo = 'lambdalisue/fern-bookmark.vim'
depends = ['lambdalisue/fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-comparator-lexical.vim'
depends = ['lambdalisue/fern.vim']


[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'
depends = ['lambdalisue/fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'
depends = ['lambdalisue/fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-mapping-git.vim'
depends = ['lambdalisue/fern.vim']

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'
depends = ['lambdalisue/nerdfont.vim']

[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/vim-unified-diff'

[[plugins]]
repo = 'machakann/vim-swap'

[[plugins]]
repo = 'mattn/libcallex-vim'

[[plugins]]
repo = 'mattn/vim-findroot'

[[plugins]]
repo = 'mattn/vim-lsp-icons'

[[plugins]]
repo = 'mattn/vim-lsp-settings'
hook_add = '''
let g:lsp_settings = {
\  'efm-langserver': {'disabled': v:false}
\}
'''

[[plugins]]
repo = 'mattn/vim-notification'

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'mhinz/vim-startify'

[[plugins]]
repo = 'miyakogi/conoline.vim'

[[plugins]]
repo = 'osyo-manga/quickrun-hook-u-nya-'
depends = ['vim-quickrun']

[[plugins]]
repo = 'osyo-manga/quickrun-hook-vcvarsall'

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'osyo-manga/vim-over'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'osyo-manga/vim-reunions'

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
depends = ['typescript-vim']

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add='''
let g:lsp_signs_enabled = 1         " enable signs
let g:lsp_diagnostics_echo_cursor = 1 " enable echo under cursor when in normal mode

let g:lsp_signs_error = {'text': '✗'}
let g:lsp_signs_warning = {'text': '‼'}

let g:lsp_log_verbose = 1
let g:lsp_log_file = expand('~/vim-lsp.log')
'''

[[plugins]]
repo = 'previm/previm'

#[[plugins]]
#repo = 'raa0121/denops-bcdice-api.vim'

[[plugins]]
repo = 'raa0121/vim-ulilith'

[[plugins]]
repo = 'rbtnn/game_engine.vim'

[[plugins]]
repo = 'rbtnn/vim-pterm'
if = '''!has('nvim')'''

[[plugins]]
repo = 'rhysd/try-colorscheme.vim'

#[[plugins]]
#repo = 'takkii/dps-himekuri'

[[plugins]]
repo = 'thinca/vim-localrc'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'thinca/vim-singleton'

[[plugins]]
repo = 'thinca/vim-splash'
hook_add = '''
let g:loaded_splash = 1
'''

[[plugins]]
repo = 'thosakwe/vim-flutter'

[[plugins]]
repo = 'tsuyoshicho/vim-efm-langserver-settings'
depends = ['vim-lsp']

[[plugins]]
repo = 'tyru/open-browser.vim'

[[plugins]]
repo = 'tyru/kirikiri.vim'

[[plugins]]
repo = 'ujihisa/neco-look'
if = '''executable('look')'''

[[plugins]]
repo = 'yaasita/slack.vim'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'vim-jp/syntax-vim-ex'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'voldikss/vim-floaterm'
hook_add = '''
nnoremap   <silent>   <F7>    :FloatermNew<CR>
tnoremap   <silent>   <F7>    <C-\><C-n>:FloatermNew<CR>
nnoremap   <silent>   <F8>    :FloatermPrev<CR>
tnoremap   <silent>   <F8>    <C-\><C-n>:FloatermPrev<CR>
nnoremap   <silent>   <F9>    :FloatermNext<CR>
tnoremap   <silent>   <F9>    <C-\><C-n>:FloatermNext<CR>
tnoremap   <silent>   <F10>   <C-W>"\"
tnoremap   <silent>   <F11>   <C-W>N
nnoremap   <silent>   <F12>   :FloatermToggle<CR>
tnoremap   <silent>   <F12>   <C-\><C-n>:FloatermToggle<CR>
augroup my-floaterm
  autocmd!
  autocmd User FloatermOpen nnoremap <buffer> <nowait> <F10> a
augroup END
'''
